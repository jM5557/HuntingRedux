{"version":3,"sources":["serviceWorker.js","components/image-modal/image-modal.js","components/gallery/gallery-component.jsx","components/video-modal/videos.js","components/video-modal/video-modal.js","components/video-modal/video.js","components/pages/videos-page.js","components/navbar/navbar-component.jsx","index.js"],"names":["Boolean","window","location","hostname","match","ImageModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setViewMode","view_mode","s_i","state","selected_img","img","a","b","setState","toggleLayout","layout","mode","btn_text","renderWithLayout","react_default","createElement","alt","src","imgPath","className","document","body","removeChild","getElementById","onClick","closeModal","Fragment","bind","Component","Gallery","renderModal","img_a","img_b","img_modal_div","id","appendChild","console","log","ReactDOM","render","image_modal","images","imagePath","hr__image_gallery","_this2","arr_a","arr_b","render_gallery","filter","i","indexOf","push","map","key","videos","games","name","abbr","CATEGORY","categories","VideoModal","video","frameBorder","allow","allowFullScreen","VideoItem","displayVideoModal","d","video_modal","VideosPage","getAllVids","t","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Vids","Symbol","iterator","next","done","value","concat","err","return","filterVids","vids","filterMode","v","setFilter","filter_mode","viewBy","renderByCategory","renderVids","length","renderButtons","c","assertThisInitialized","renderByGame","renderCont","g","j","NavbarComponent","toggleMenu","doDisplayMenu","currentWindowDimensions","x","Math","max","documentElement","clientWidth","innerWidth","y","clientHeight","innerHeight","MOBILE_BREAKPOINT","addEventListener","curr_window_dimensions","href","navbar_component","videos_page","gallery_component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc48f575.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './../modal.scss';\n\nclass ImageModal extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            view_mode: 'REDUX',\n            selected_img: props.img.a,\n\n            layout:  {\n                mode: 'SIDE_BY_SIDE',\n                btn_text: 'View Fullscreen'\n            },\n        }\n    }\n\n    setViewMode = (view_mode) => {\n        let s_i = this.state.selected_img;\n\n        switch (view_mode) {\n            case 'REDUX':\n                s_i = this.props.img.a       \n                break;\n            case 'ORIGINAL':\n                s_i = this.props.img.b\n                break;\n            default:\n                s_i = this.props.img.a\n                break;\n        }\n\n        this.setState({\n            view_mode: view_mode,\n            selected_img: s_i\n        });\n    }\n\n    toggleLayout = () => {\n        let l = this.state.layout;\n\n        switch (this.state.layout.mode) {\n            case 'SIDE_BY_SIDE':\n                this.setState({\n                    layout: {\n                        mode: 'SINGLE',\n                        btn_text: 'View Side by Side'\n                    },\n                    view_mode: 'REDUX',\n                    selected_img: this.props.img.a\n                });\n                break;\n            default:\n                this.setState({\n                    layout: {\n                        mode: 'SIDE_BY_SIDE',\n                        btn_text: 'View Fullscreen'\n                    }\n                })\n                break;\n        }\n    }\n\n    renderWithLayout = () => {\n        switch (this.state.layout.mode) {\n            case 'SINGLE':\n                return (\n                    <img alt = \"full screenshot\" src = { this.props.imgPath + this.state.selected_img } />\n                );\n            case 'SIDE_BY_SIDE':\n                return (\n                    <div className = \"side-by-side\">\n                        <img alt = \"before\" src = { this.props.imgPath + this.props.img.b } />\n                        <img alt = \"after\" src = { this.props.imgPath + this.props.img.a } />\n                    </div>\n                );\n            default:\n                return (\n                    <img alt = \"full screenshot\" src = { this.props.imgPath + this.state.selected_img } />\n                );\n        }\n    }\n\n    closeModal () {\n        document.body.removeChild(document.getElementById('gallery_root'));\n    }\n\n    render() { \n        return ( \n            <div className = \"modal\">\n\n                <div className = \"overlay\" onClick = { this.closeModal }></div>\n\n                <button className = \"close-btn\" onClick = { this.closeModal } >&times;</button>\n \n                <div className = \"controls-wrapper\">\n                    <button onClick = { this.toggleLayout}>\n                        { this.state.layout.btn_text }\n                    </button>\n\n                    { (this.state.layout.mode === 'SINGLE') && (\n                        <React.Fragment>\n                            <button className = { \n                                this.state.view_mode == 'REDUX' ? 'controls-btn active' : 'controls-btn' }\n                                onClick = { this.setViewMode.bind(this, 'REDUX')}\n                            >\n                                REDUX Ver.\n                            </button>\n\n                            <button className = { \n                                this.state.view_mode == 'ORIGINAL' ? 'controls-btn active' : 'controls-btn' }\n                                onClick = { this.setViewMode.bind(this, 'ORIGINAL')}\n                            >\n                                    OLD Ver.\n                            </button>\n                        </React.Fragment>\n                    )}\n                </div>\n\n                { this.renderWithLayout () }\n\n            </div>\n         );\n    }\n}\n \nexport default ImageModal;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ImageModal from './../image-modal/image-modal';\n\nclass Gallery extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            images: null\n         }\n    }\n\n    renderModal = (img_a, img_b) => {\n        if (document.getElementById('gallery_root'))\n            document.body.removeChild(document.getElementById('gallery_root'));\n\n        let img_modal_div = document.createElement('div');\n        img_modal_div.id = 'gallery_root';\n\n        document.body.appendChild(img_modal_div);\n\n        let img = { a: img_a, b: img_b };\n        console.log(img);\n\n        ReactDOM.render(<ImageModal  \n            img = { img }\n            imgPath = { this.state.images.imagePath }\n        />, document.getElementById('gallery_root'));\n    }\n\n    componentDidMount () {\n        if (window.hr__image_gallery) {\n            this.setState({\n                images: window.hr__image_gallery\n            });\n        }\n    }\n\n    render() { \n\n        if (this.state.images === null) {\n            return (\n                <div className = \"loading\">Now Loading...</div>\n            )\n        }\n\n        let arr_a = [], arr_b = [];\n        \n        let render_gallery = this.state.images.images.filter( (img, i) => {\n\n            // Pre-fills two arrays, one for REDUX images\n            // and one for OLD Images\n            if (img.src.indexOf('_a') !== -1) {\n\n                arr_a.push(img.src);\n\n            } else if (img.src.indexOf('_b') !== -1) {\n\n                arr_b.push(img.src);\n\n            }\n\n            return img.src.indexOf('_b') === -1;\n        } ).map( (img, i) => {\n            return (\n                <img \n                    key = { i } \n                    alt = \"gallery\" \n                    src = { this.state.images.imagePath + img.src } \n                    onClick = { this.renderModal.bind(this, arr_a[i], arr_b[i]) }\n                />\n            );\n        });\n\n        return ( \n            <div className = \"gallery\">\n                { render_gallery }\n            </div>\n         );\n    }\n}\n\nexport default Gallery;","let categories = [\n    {\n        id: 1,\n        CATEGORY: 'NONE'\n    },\n    {\n        id: 2,\n        CATEGORY: 'TRAILER'\n    },\n    {\n        id: 3,\n        CATEGORY: 'INTRO'\n    },\n    {\n        id: 4,\n        CATEGORY: 'ECOLOGY'\n    }\n]\n\nlet games = [\n    {\n        id: 1,\n        name: 'Monster Hunter Portable 3rd',\n        abbr: 'MHP3rd',\n        videos: [\n            {\n                src: 'wsGVYFBxY88',\n                CATEGORY: 2\n            },\n            {\n                src: '98mSNK2UKqg',\n                CATEGORY: 2\n            },\n            {\n                src: 'X0w1iPWyoRA',\n                CATEGORY: 2\n            },\n            {\n                src: '47DKoSDeOUQ',\n                CATEGORY: 3\n            }\n        ]\n    },\n    {\n        id: 2,\n        name: 'Monster Hunter G',\n        abbr: 'MHG',\n        videos: [\n            {\n                src: 'PWbjfqWietQ',\n                CATEGORY: 3\n            }\n        ]\n    },\n    {\n        id: 3,\n        name: 'Monster Hunter',\n        abbr: 'MH1',\n        videos: [\n            {\n                src: 'mJcuO4tTAPM',\n                CATEGORY: 4\n            }\n        ]\n    }\n]\n\nexport default {\n    games,\n    categories\n}","import React, { Component } from 'react';\nimport './../modal.scss';\n\nclass VideoModal extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    closeModal = () => {\n        document.body.removeChild(document.getElementById('video_root'));\n    }\n\n    render() { \n        return ( \n            <div className = \"modal\">\n\n                <div className = \"overlay\" onClick = { this.closeModal }></div>\n\n                <button className = \"close-btn\" onClick = { this.closeModal } >&times;</button>\n\n                <div className = \"video-iframe-wrapper\">\n                    <div className = \"video-iframe-scaler\">\n                        <iframe src={ \"https://www.youtube.com/embed/\" + this.props.video.src } frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n                        </iframe>\n                    </div>\n                </div>\n\n            </div>\n         );\n    }\n}\n \nexport default VideoModal;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VideoModal from './video-modal';\n\nclass VideoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    displayVideoModal = () => {\n        if ( document.getElementById('video') )\n            document.body.removeChild(document.getElementById('video_root'));\n        \n        let d = document.createElement('div');\n        d.id = 'video_root';\n\n        document.body.appendChild(d);\n\n        ReactDOM.render(<VideoModal \n            video = { this.props.video }\n        />, document.getElementById('video_root'));\n    }\n\n    render() { \n        return ( \n            <img \n                alt = \"video thumbnail\" \n                src = { \"http://img.youtube.com/vi/\" + this.props.video.src + \"/0.jpg\" } \n                onClick = { this.displayVideoModal }\n            />\n         );\n    }\n}\n \nexport default VideoItem;","import React, { Component } from 'react';\nimport Vids from './../video-modal/videos';\nimport VideoItem from './../video-modal/video';\n\nclass VideosPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            filterMode: 'NONE',\n            viewBy: 'GAME'\n         }\n    }\n\n    getAllVids = () => {\n        \n        let t = [];\n\n        for (let games of Vids.games) {\n\n            t = t.concat(games.videos);\n\n        }\n\n        return t;\n    }\n\n    filterVids = () => {\n\n        let vids = this.getAllVids();\n\n        switch (this.state.filterMode) {\n            case 'TRAILER':\n                return vids.filter((v, i) => {\n                    return v.CATEGORY === 2\n                });\n            case 'INTRO':\n                return vids.filter((v, i) => {\n                    return v.CATEGORY === 3\n                });\n            case 'ECOLOGY':\n                return vids.filter((v, i) => {\n                    return v.CATEGORY === 4\n                });\n            default:\n                return vids;\n        }   \n    }\n\n    setFilter = (filter_mode) => {\n        if (this.state.viewBy === 'GAME')\n            this.setState({\n                filterMode: filter_mode,\n                viewBy: 'CATEGORY'\n            });\n        else if (filter_mode === 'NONE')\n            this.setState({\n                filterMode: filter_mode,\n                viewBy: 'GAME'\n            });\n        else\n            this.setState({\n                filterMode: filter_mode\n            });\n    }\n\n    renderByCategory = () => { \n\n        let v = this.filterVids();\n        let renderVids;\n\n        if (v.length < 1)\n            renderVids = ( \n                <div className = \"error empty\">\n                    No Videos Available\n                </div> \n            );\n        else\n            renderVids = this.filterVids().map( (v, i) => {\n                    return ( <VideoItem key = { i } video = { v } /> );\n                });\n\n        return ( \n            <div className = \"videos-wrapper\">\n                <h3>\n                    { this.state.filterMode }\n                </h3>\n                <div className = \"videos-inner\">\n                    { renderVids }\n                </div>\n            </div>\n        );\n    }\n\n    renderButtons = () => {\n\n        return Vids.categories.map( (c, i) => {\n            return ( \n                <button key = { i } onClick = { this.setFilter.bind(this, c.CATEGORY) }>\n                    { c.CATEGORY }\n                </button>\n            )\n        });\n    }\n\n    renderByGame = () => {\n        let renderCont = Vids.games.map((g, i) => {\n\n            let v = g.videos.map( (v, j) => {\n\n                return ( <VideoItem key = { j } video = { v } /> );\n\n            } );\n\n            return (\n\n                <div key = { g.id } className = \"game-videos\">\n                    <h3>{ g.name }</h3>\n\n                    { v }\n                </div>\n\n            )\n\n        });\n\n        return (\n            <div className = \"videos-wrapper\">\n                <div className = \"videos-inner\">\n                    { renderCont }\n                </div>\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div className = \"videos-list\">\n                <div className = \"controls-wrapper\">\n                   <span>Sort By</span> \n                   { this.renderButtons() }\n                </div>\n                { (this.state.viewBy === 'CATEGORY') ? this.renderByCategory() : this.renderByGame() }\n            </div>\n        )\n    }\n}\n \nexport default VideosPage;","import React, { Component } from 'react'\n\nclass NavbarComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            doDisplayMenu: false,\n            currentWindowDimensions: {\n                x: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n                y: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n            },\n            MOBILE_BREAKPOINT: 1050\n         }\n    }\n\n    componentDidMount () {\n        window.addEventListener('resize', () => {\n            let curr_window_dimensions = {\n                x: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n                y: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n            }\n\n            if (curr_window_dimensions.x > this.state.MOBILE_BREAKPOINT\n                && !this.state.doDisplayMenu)\n                this.setState({\n                    currentWindowDimensions: curr_window_dimensions,\n                    doDisplayMenu: true\n                });\n            else {\n                this.setState({\n                    currentWindowDimensions: curr_window_dimensions\n                });\n            }\n        });\n    }\n\n    toggleMenu = () => {\n        this.setState({\n            doDisplayMenu: !this.state.doDisplayMenu\n        });\n    }\n\n    render() { \n        return ( \n            <header id = \"nav-top\">\n                <a href=\"/\" id = \"logo-top\">\n                    Hunting REDUX\n                </a>\n\n                { (this.state.currentWindowDimensions.x > this.state.MOBILE_BREAKPOINT \n                    || this.state.doDisplayMenu) && (\n                <div className = \"nav__link_wrapper\">\n\n                    <a href=\"/releases\">Releases</a>\n\n                    <a href=\"/mhp3rd\">MHP3rd Redux</a>\n\n                    <a href = \"/videos\">Videos</a>\n\n                    <a href=\"/about\">About</a>\n\n                    <a href=\"https://ppsspp.org\" className=\"ppsspp_logo\" >Get PPSSPP</a>\n\n                </div>\n                    )}\n\n                <div className = \"dl_links\">\n                    <a href=\"/\" className = \"dl-btn\">Download Texture Pack</a>\n                    <button onClick = { this.toggleMenu } className = \"nav__hamburger_menu\">\n                        Menu\n                    </button>\n                </div>\n            </header>\n         );\n    }\n}\n \nexport default NavbarComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport Gallery from './components/gallery/gallery-component';\nimport VideosPage from './components/pages/videos-page';\nimport NavbarComponent from './components/navbar/navbar-component';\n\nif (document.getElementById('navbar-root'))\n    ReactDOM.render(<NavbarComponent />, document.getElementById('navbar-root'));\n\nif (document.getElementById('video-page-root'))\n    ReactDOM.render(<VideosPage />, document.getElementById('video-page-root'));\n\nif (document.getElementById('gallery-root')) {\n    ReactDOM.render(<Gallery />, document.getElementById('gallery-root'))\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}