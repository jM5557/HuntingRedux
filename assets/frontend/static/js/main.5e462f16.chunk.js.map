{"version":3,"sources":["serviceWorker.js","components/image-modal/image-modal.js","components/gallery/gallery-component.jsx","components/video-modal/video-modal.js","components/video-modal/video.js","components/pages/videos-page.js","components/navbar/navbar-component.jsx","index.js"],"names":["Boolean","window","location","hostname","match","ImageModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setViewMode","view_mode","s_i","state","selected_img","img","a","b","setState","toggleLayout","layout","mode","btn_text","renderWithLayout","react_default","createElement","alt","src","imgPath","className","document","body","removeChild","getElementById","onClick","closeModal","Fragment","bind","Component","Gallery","renderModal","img_a","img_b","img_modal_div","id","appendChild","console","log","ReactDOM","render","image_modal","images","imagePath","hr__image_gallery","_this2","arr_a","arr_b","render_gallery","filter","i","indexOf","push","map","key","VideoModal","video","frameBorder","allow","allowFullScreen","VideoItem","displayVideoModal","d","video_modal","VideosPage","getAllVids","t","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","videos","games","Symbol","iterator","next","done","value","concat","err","return","filterVids","vids","filterMode","v","CATEGORY","setFilter","filter_mode","viewBy","renderByCategory","renderVids","length","renderButtons","categories","c","assertThisInitialized","renderByGame","renderCont","g","j","name","hr__videos","NavbarComponent","toggleMenu","doDisplayMenu","currentWindowDimensions","x","Math","max","documentElement","clientWidth","innerWidth","y","clientHeight","innerHeight","MOBILE_BREAKPOINT","addEventListener","curr_window_dimensions","href","navbar_component","videos_page","gallery_component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e462f16.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport './../modal.scss';\r\n\r\nclass ImageModal extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            view_mode: 'REDUX',\r\n            selected_img: props.img.a,\r\n\r\n            layout:  {\r\n                mode: 'SIDE_BY_SIDE',\r\n                btn_text: 'View Fullscreen'\r\n            },\r\n        }\r\n    }\r\n\r\n    setViewMode = (view_mode) => {\r\n        let s_i = this.state.selected_img;\r\n\r\n        switch (view_mode) {\r\n            case 'REDUX':\r\n                s_i = this.props.img.a       \r\n                break;\r\n            case 'ORIGINAL':\r\n                s_i = this.props.img.b\r\n                break;\r\n            default:\r\n                s_i = this.props.img.a\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            view_mode: view_mode,\r\n            selected_img: s_i\r\n        });\r\n    }\r\n\r\n    toggleLayout = () => {\r\n        let l = this.state.layout;\r\n\r\n        switch (this.state.layout.mode) {\r\n            case 'SIDE_BY_SIDE':\r\n                this.setState({\r\n                    layout: {\r\n                        mode: 'SINGLE',\r\n                        btn_text: 'View Side by Side'\r\n                    },\r\n                    view_mode: 'REDUX',\r\n                    selected_img: this.props.img.a\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    layout: {\r\n                        mode: 'SIDE_BY_SIDE',\r\n                        btn_text: 'View Fullscreen'\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderWithLayout = () => {\r\n        switch (this.state.layout.mode) {\r\n            case 'SINGLE':\r\n                return (\r\n                    <img alt = \"full screenshot\" src = { this.props.imgPath + this.state.selected_img } />\r\n                );\r\n            case 'SIDE_BY_SIDE':\r\n                return (\r\n                    <div className = \"side-by-side\">\r\n                        <img alt = \"before\" src = { this.props.imgPath + this.props.img.b } />\r\n                        <img alt = \"after\" src = { this.props.imgPath + this.props.img.a } />\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <img alt = \"full screenshot\" src = { this.props.imgPath + this.state.selected_img } />\r\n                );\r\n        }\r\n    }\r\n\r\n    closeModal () {\r\n        document.body.removeChild(document.getElementById('gallery_root'));\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className = \"modal\">\r\n\r\n                <div className = \"overlay\" onClick = { this.closeModal }></div>\r\n\r\n                <button className = \"close-btn\" onClick = { this.closeModal } >&times;</button>\r\n \r\n                <div className = \"controls-wrapper\">\r\n                    <button onClick = { this.toggleLayout}>\r\n                        { this.state.layout.btn_text }\r\n                    </button>\r\n\r\n                    { (this.state.layout.mode === 'SINGLE') && (\r\n                        <React.Fragment>\r\n                            <button className = { \r\n                                this.state.view_mode == 'REDUX' ? 'controls-btn active' : 'controls-btn' }\r\n                                onClick = { this.setViewMode.bind(this, 'REDUX')}\r\n                            >\r\n                                REDUX Ver.\r\n                            </button>\r\n\r\n                            <button className = { \r\n                                this.state.view_mode == 'ORIGINAL' ? 'controls-btn active' : 'controls-btn' }\r\n                                onClick = { this.setViewMode.bind(this, 'ORIGINAL')}\r\n                            >\r\n                                    OLD Ver.\r\n                            </button>\r\n                        </React.Fragment>\r\n                    )}\r\n                </div>\r\n\r\n                { this.renderWithLayout () }\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ImageModal;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ImageModal from './../image-modal/image-modal';\r\n\r\nclass Gallery extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            images: null\r\n         }\r\n    }\r\n\r\n    renderModal = (img_a, img_b) => {\r\n        if (document.getElementById('gallery_root'))\r\n            document.body.removeChild(document.getElementById('gallery_root'));\r\n\r\n        let img_modal_div = document.createElement('div');\r\n        img_modal_div.id = 'gallery_root';\r\n\r\n        document.body.appendChild(img_modal_div);\r\n\r\n        let img = { a: img_a, b: img_b };\r\n        console.log(img);\r\n\r\n        ReactDOM.render(<ImageModal  \r\n            img = { img }\r\n            imgPath = { this.state.images.imagePath }\r\n        />, document.getElementById('gallery_root'));\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (window.hr__image_gallery) {\r\n            this.setState({\r\n                images: window.hr__image_gallery\r\n            });\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        if (this.state.images === null) {\r\n            return (\r\n                <div className = \"loading\">Now Loading...</div>\r\n            )\r\n        }\r\n\r\n        let arr_a = [], arr_b = [];\r\n        \r\n        let render_gallery = this.state.images.images.filter( (img, i) => {\r\n\r\n            // Pre-fills two arrays, one for REDUX images\r\n            // and one for OLD Images\r\n            if (img.src.indexOf('_a') !== -1) {\r\n\r\n                arr_a.push(img.src);\r\n\r\n            } else if (img.src.indexOf('_b') !== -1) {\r\n\r\n                arr_b.push(img.src);\r\n\r\n            }\r\n\r\n            return img.src.indexOf('_b') === -1;\r\n        } ).map( (img, i) => {\r\n            return (\r\n                <div \r\n                    key = { i } \r\n                    className = \"gallery-thumbnail\"\r\n                    onClick = { this.renderModal.bind(this, arr_a[i], arr_b[i]) }\r\n                >\r\n                    <img\r\n                        alt = \"gallery\" \r\n                        src = { this.state.images.imagePath + img.src }\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return ( \r\n            <div className = \"gallery\">\r\n                { render_gallery }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Gallery;","import React, { Component } from 'react';\r\nimport './../modal.scss';\r\n\r\nclass VideoModal extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        document.body.removeChild(document.getElementById('video_root'));\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className = \"modal\">\r\n\r\n                <div className = \"overlay\" onClick = { this.closeModal }></div>\r\n\r\n                <button className = \"close-btn\" onClick = { this.closeModal } >&times;</button>\r\n\r\n                <div className = \"video-iframe-wrapper\">\r\n                    <div className = \"video-iframe-scaler\">\r\n                        <iframe src={ \"https://www.youtube.com/embed/\" + this.props.video.src } frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\r\n                        </iframe>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default VideoModal;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport VideoModal from './video-modal';\r\n\r\nclass VideoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    displayVideoModal = () => {\r\n        if ( document.getElementById('video') )\r\n            document.body.removeChild(document.getElementById('video_root'));\r\n        \r\n        let d = document.createElement('div');\r\n        d.id = 'video_root';\r\n\r\n        document.body.appendChild(d);\r\n\r\n        ReactDOM.render(<VideoModal \r\n            video = { this.props.video }\r\n        />, document.getElementById('video_root'));\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className = \"video-wrapper\" onClick = { this.displayVideoModal }>\r\n                <div className = \"play-btn\"></div>\r\n                <img \r\n                    alt = \"video thumbnail\" \r\n                    src = { \"http://img.youtube.com/vi/\" + this.props.video.src + \"/0.jpg\" } \r\n                />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default VideoItem;","import React, { Component } from 'react';\r\nimport VideoItem from './../video-modal/video';\r\n\r\nclass VideosPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            videos: null,\r\n            filterMode: 'NONE',\r\n            viewBy: 'GAME'\r\n         }\r\n    }\r\n\r\n    getAllVids = () => {\r\n        \r\n        let t = [];\r\n\r\n        for (let games of this.state.videos.games) {\r\n\r\n            t = t.concat(games.videos);\r\n\r\n        }\r\n\r\n        return t;\r\n    }\r\n\r\n    filterVids = () => {\r\n\r\n        let vids = this.getAllVids();\r\n\r\n        switch (this.state.filterMode) {\r\n            case 'TRAILER':\r\n                return vids.filter((v, i) => {\r\n                    return v.CATEGORY === 2\r\n                });\r\n            case 'INTRO':\r\n                return vids.filter((v, i) => {\r\n                    return v.CATEGORY === 3\r\n                });\r\n            case 'ECOLOGY':\r\n                return vids.filter((v, i) => {\r\n                    return v.CATEGORY === 4\r\n                });\r\n            default:\r\n                return vids;\r\n        }   \r\n    }\r\n\r\n    setFilter = (filter_mode) => {\r\n        if (this.state.viewBy === 'GAME')\r\n            this.setState({\r\n                filterMode: filter_mode,\r\n                viewBy: 'CATEGORY'\r\n            });\r\n        else if (filter_mode === 'NONE')\r\n            this.setState({\r\n                filterMode: filter_mode,\r\n                viewBy: 'GAME'\r\n            });\r\n        else\r\n            this.setState({\r\n                filterMode: filter_mode\r\n            });\r\n    }\r\n\r\n    renderByCategory = () => { \r\n\r\n        let v = this.filterVids();\r\n        let renderVids;\r\n\r\n        if (v.length < 1)\r\n            renderVids = ( \r\n                <div className = \"error empty\">\r\n                    No Videos Available\r\n                </div> \r\n            );\r\n        else\r\n            renderVids = this.filterVids().map( (v, i) => {\r\n                    return ( \r\n                        <div className = \"video-thumbnail\" key = { i }>\r\n                            <VideoItem video = { v } />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n        return ( \r\n            <div className = \"videos-wrapper\">\r\n                <h3>\r\n                    { this.state.filterMode }\r\n                </h3>\r\n                <div className = \"videos-inner\">\r\n                    { renderVids }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderButtons = () => {\r\n\r\n        return this.state.videos.categories.map( (c, i) => {\r\n            return ( \r\n                <button key = { i } onClick = { this.setFilter.bind(this, c.CATEGORY) }>\r\n                    { c.CATEGORY }\r\n                </button>\r\n            )\r\n        });\r\n    }\r\n\r\n    renderByGame = () => {\r\n        let renderCont = this.state.videos.games.map((g, i) => {\r\n\r\n            let v = g.videos.map( (v, j) => {\r\n\r\n                return ( \r\n                    <div className = \"video-thumbnail\" key = { j }>\r\n                        <VideoItem video = { v } />\r\n                    </div> \r\n                );\r\n            } );\r\n\r\n            return (\r\n\r\n                <div key = { g.id } className = \"game-videos\">\r\n                    <h3>{ g.name }</h3>\r\n\r\n                    { v }\r\n                </div>\r\n\r\n            )\r\n\r\n        });\r\n\r\n        return (\r\n            <div className = \"videos-wrapper\">\r\n                <div className = \"videos-inner\">\r\n                    { renderCont }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (window.hr__videos) {\r\n            this.setState({\r\n                videos: window.hr__videos\r\n            });\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        if (this.state.videos === null) {\r\n            return (\r\n                <div className = \"loading\">Now Loading...</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className = \"videos-list\">\r\n                <div className = \"controls-wrapper\">\r\n                   <span>Sort By</span> \r\n                   { this.renderButtons() }\r\n                </div>\r\n                { (this.state.viewBy === 'CATEGORY') ? this.renderByCategory() : this.renderByGame() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default VideosPage;","import React, { Component } from 'react'\r\n\r\nclass NavbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            doDisplayMenu: false,\r\n            currentWindowDimensions: {\r\n                x: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\r\n                y: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n            },\r\n            MOBILE_BREAKPOINT: 1050\r\n         }\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('resize', () => {\r\n            let curr_window_dimensions = {\r\n                x: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\r\n                y: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n            }\r\n\r\n            if (curr_window_dimensions.x > this.state.MOBILE_BREAKPOINT\r\n                && !this.state.doDisplayMenu)\r\n                this.setState({\r\n                    currentWindowDimensions: curr_window_dimensions,\r\n                    doDisplayMenu: true\r\n                });\r\n            else {\r\n                this.setState({\r\n                    currentWindowDimensions: curr_window_dimensions\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            doDisplayMenu: !this.state.doDisplayMenu\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <header id = \"nav-top\">\r\n                <a href=\"/\" id = \"logo-top\">\r\n                    Hunting REDUX\r\n                </a>\r\n\r\n                { (this.state.currentWindowDimensions.x > this.state.MOBILE_BREAKPOINT \r\n                    || this.state.doDisplayMenu) && (\r\n                <div className = \"nav__link_wrapper\">\r\n\r\n                    <a href=\"/releases\">Releases</a>\r\n\r\n                    <a href=\"/mhp3rd\">MHP3rd Redux</a>\r\n\r\n                    <a href = \"/videos\">Videos</a>\r\n\r\n                    <a href=\"/about\">About</a>\r\n\r\n                    <a href=\"https://ppsspp.org\" className=\"ppsspp_logo\" >Get PPSSPP</a>\r\n\r\n                </div>\r\n                    )}\r\n\r\n                <div className = \"dl_links\">\r\n                    <a href=\"/\" className = \"dl-btn\">Download Texture Pack</a>\r\n                    <button onClick = { this.toggleMenu } className = \"nav__hamburger_menu\">\r\n                        Menu\r\n                    </button>\r\n                </div>\r\n            </header>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavbarComponent;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Gallery from './components/gallery/gallery-component';\r\nimport VideosPage from './components/pages/videos-page';\r\nimport NavbarComponent from './components/navbar/navbar-component';\r\n\r\nif (document.getElementById('navbar-root'))\r\n    ReactDOM.render(<NavbarComponent />, document.getElementById('navbar-root'));\r\n\r\nif (document.getElementById('video-page-root'))\r\n    ReactDOM.render(<VideosPage />, document.getElementById('video-page-root'));\r\n\r\nif (document.getElementById('gallery-root')) {\r\n    ReactDOM.render(<Gallery />, document.getElementById('gallery-root'))\r\n}\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}